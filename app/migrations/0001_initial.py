# Generated by Django 5.1.4 on 2024-12-17 07:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('user', 'User')], default='user', max_length=5)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'abs_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DailyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('denied', 'Denied')], default='pending', max_length=10)),
                ('admin_comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('broiler_opening_stock', models.IntegerField()),
                ('broiler_closing_stock', models.IntegerField()),
                ('broiler_sold_customer', models.IntegerField()),
                ('broiler_sold_b2b', models.IntegerField()),
                ('broiler_dead', models.IntegerField()),
                ('broiler_wastage_weight', models.FloatField()),
                ('broiler_rate_customer', models.FloatField()),
                ('broiler_rate_b2b', models.FloatField()),
                ('broiler_total_sales', models.IntegerField()),
                ('country_opening_stock', models.IntegerField()),
                ('country_closing_stock', models.IntegerField()),
                ('country_sold_customer', models.IntegerField()),
                ('country_sold_b2b', models.IntegerField()),
                ('country_dead', models.IntegerField()),
                ('country_wastage_weight', models.FloatField()),
                ('country_rate_customer', models.FloatField()),
                ('country_rate_b2b', models.FloatField()),
                ('country_total_sales', models.IntegerField()),
                ('goat_opening_stock', models.IntegerField()),
                ('goat_sold_customer', models.IntegerField()),
                ('mutton_total_weight', models.FloatField()),
                ('mutton_weight_sold_customer', models.FloatField()),
                ('mutton_weight_sold_b2b', models.FloatField()),
                ('mutton_wastage_weight', models.FloatField()),
                ('mutton_rate_customer', models.FloatField()),
                ('mutton_rate_b2b', models.FloatField()),
                ('egg_opening_stock', models.IntegerField()),
                ('egg_sold', models.IntegerField()),
                ('egg_closing_stock', models.IntegerField()),
                ('egg_rate', models.FloatField()),
                ('total_offline_amount', models.FloatField()),
                ('total_online_amount', models.FloatField()),
                ('total_sales_amount', models.FloatField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'abs_dailyreport',
            },
        ),
        migrations.CreateModel(
            name='ApprovalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('approved', 'Approved'), ('denied', 'Denied')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.dailyreport')),
            ],
        ),
    ]
